{"version":3,"sources":["components/AddAppointments.js","components/ListAppointments.js","components/SearchAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addAppointment","setState","toggleForm","target","value","name","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","petOwner","rows","cols","Component","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","App","myAppointments","queryText","lastIndex","tempApts","findIndex","query","order","dir","apt","unshift","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mTA8KeA,E,kDAzKX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,QAAS,GACTC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,SAAU,IAGd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAXP,E,sDAcJE,GACNA,EAAEC,iBACF,IAAIC,EAAU,CACVV,QAASW,KAAKZ,MAAMC,QACpBC,UAAWU,KAAKZ,MAAME,UACtBC,QAASS,KAAKZ,MAAMG,QAAU,IAAMS,KAAKZ,MAAMI,QAC/CC,SAAUO,KAAKZ,MAAMK,UAGzBO,KAAKC,MAAMC,eAAeH,GAE1BC,KAAKG,SAAS,CACVd,QAAS,GACTC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,SAAU,KAEdO,KAAKC,MAAMG,e,mCAGFP,GACT,IAAMQ,EAASR,EAAEQ,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBP,KAAKG,SAAL,eACKI,EAAOD,M,+BAKZ,OACI,yBAAKE,UACD,yBACCR,KAAKC,MAAMQ,YAAc,GAAG,oBAE7B,yBACID,UAAU,mDACVE,QAASV,KAAKC,MAAMG,YAEvB,kBAAC,IAAD,MAJD,oBAOA,yBAAKI,UAAU,aACf,0BAAMG,GAAG,UAAUC,YAAU,EAACC,SAAUb,KAAKJ,WACzC,yBAAKY,UAAU,uBACf,2BACIA,UAAU,wCACVM,QAAQ,UACRC,UAAQ,GAHZ,YAOA,yBAAKP,UAAU,aACX,2BACAQ,KAAK,OACLR,UAAU,eACVD,KAAK,UACLU,YAAY,aACZX,MAASN,KAAKZ,MAAMC,QACpB6B,SAAYlB,KAAKN,iBAKrB,yBAAKc,UAAU,uBACf,2BACIA,UAAU,wCACVM,QAAQ,aAFZ,aAMA,yBAAKN,UAAU,aACX,2BACAQ,KAAK,OACLR,UAAU,eACVD,KAAK,YACLU,YAAY,eACZX,MAASN,KAAKZ,MAAM+B,SACpBD,SAAYlB,KAAKN,iBAKrB,yBAAKc,UAAU,uBACf,2BACIA,UAAU,wCACVM,QAAQ,WAFZ,QAMA,yBAAKN,UAAU,YACX,2BACAQ,KAAK,OACLR,UAAU,eACVD,KAAK,UACLI,GAAG,UACHL,MAASN,KAAKZ,MAAMG,QACpB2B,SAAYlB,KAAKN,gBAGrB,2BACIc,UAAU,wCACVM,QAAQ,WAFZ,QAMA,yBAAKN,UAAU,YACX,2BACAQ,KAAK,OACLR,UAAU,eACVD,KAAK,UACLI,GAAG,UACHL,MAASN,KAAKZ,MAAMI,QACpB0B,SAAYlB,KAAKN,iBAKrB,yBAAKc,UAAU,uBACf,2BAAOA,UAAU,yBAAyBM,QAAQ,YAAlD,cAGA,yBAAKN,UAAU,aACX,8BACAA,UAAU,eACVY,KAAK,IACLC,KAAK,KACLd,KAAK,WACLI,GAAG,WACHM,YAAY,oBACZX,MAASN,KAAKZ,MAAMK,SACpByB,SAAYlB,KAAKN,iBAKrB,yBAAKc,UAAU,4BACf,yBAAKA,UAAU,yBACX,4BACAQ,KAAK,SACLR,UAAU,mCAFV,4B,GA5JMc,a,iBCwDfC,E,uKAtDD,IAAD,OACL,OACI,yBAAKf,UAAU,mCACVR,KAAKC,MAAMuB,aAAaC,KAAI,SAAAC,GAAI,OAC7B,yBAAKlB,UAAU,0BAA0BmB,IAAKD,EAAKE,OAC/C,yBAAKpB,UAAU,QACX,4BAAQA,UAAU,mCAAmCE,QAAS,kBAAK,EAAKT,MAAM4B,kBAAkBH,KAAO,kBAAC,IAAD,QAG3G,yBAAKlB,UAAU,uBACX,yBAAKA,UAAU,mBACf,0BAAMA,UAAU,WACZsB,iBAAe,EACfC,gCAA8B,EAC9BC,OACI,SAAAnC,GAAC,OAAI,EAAKI,MAAMgC,WAAW,UAAWpC,EAAEQ,OAAO6B,UAAWR,EAAKE,SAGlEF,EAAKrC,SAEV,0BAAMmB,UAAU,oBAAmB,kBAAC,IAAD,CAAQ2B,KAAMT,EAAKnC,QAAS6C,MAAM,mBAAmBC,OAAO,kBAG/F,yBAAK7B,UAAU,cACf,0BAAMA,UAAU,cAAhB,UAGA,0BACIsB,iBAAe,EACfC,gCAA8B,EAC9BC,OACI,SAAAnC,GAAC,OAAI,EAAKI,MAAMgC,WAAW,YAAapC,EAAEQ,OAAO6B,UAAWR,EAAKE,SAGpEF,EAAKpC,YAGV,yBAAKkB,UAAU,YACXsB,iBAAe,EACfC,gCAA8B,EAC9BC,OACI,SAAAnC,GAAC,OAAI,EAAKI,MAAMgC,WAAW,WAAYpC,EAAEQ,OAAO6B,UAAWR,EAAKE,SAGnEF,EAAKjC,oB,GA7CP6B,aCsFhBgB,E,uKAvFD,IAAD,OACL,OAEI,yBAAK9B,UAAU,uDACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEG,GAAG,aACHK,KAAK,OACLR,UAAU,eACV+B,aAAW,sBACXrB,SAAU,SAAArB,GAAC,OAAI,EAAKI,MAAMuC,WAAW3C,EAAEQ,OAAOC,UAEhD,yBAAKE,UAAU,sBACb,4BACEQ,KAAK,SACLR,UAAU,kCACViC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SALhB,YAOW,0BAAMnC,UAAU,WAG3B,yBAAKA,UAAU,+CACb,4BAAQA,UACA,0BACwB,YAAvBR,KAAKC,MAAM2C,QAAwB,SAAS,IAEjDlC,QAAU,SAAAb,GAAC,OAAI,EAAKI,MAAM4C,YAAY,UAAW,EAAK5C,MAAM6C,WAC5DC,KAAK,KALT,YAUA,4BACIvC,UACI,0BACwB,YAAvBR,KAAKC,MAAM2C,QAAwB,SAAS,IAEjDlC,QAAU,SAAAb,GAAC,OAAI,EAAKI,MAAM4C,YAAY,UAAW,EAAK5C,MAAM6C,WAC5DC,KAAK,KANT,QAWA,4BACIvC,UACI,0BACwB,cAAvBR,KAAKC,MAAM2C,QAA0B,SAAS,IAEnDlC,QAAU,SAAAb,GAAC,OAAI,EAAKI,MAAM4C,YAAY,YAAa,EAAK5C,MAAM6C,WAC9DC,KAAK,KANT,SAUA,yBAAKC,KAAK,YAAYxC,UAAU,qBAChC,4BACIA,UACI,0BACyB,QAAxBR,KAAKC,MAAM6C,SAAqB,SAAS,IAE9CpC,QAAU,SAAAb,GAAC,OAAI,EAAKI,MAAM4C,YAAY,EAAK5C,MAAM2C,QAAS,QAC1DG,KAAK,KANT,OAUA,4BACIvC,UACI,0BACyB,SAAxBR,KAAKC,MAAM6C,SAAsB,SAAS,IAE/CpC,QAAU,SAAAb,GAAC,OAAI,EAAKI,MAAM4C,YAAY,EAAK5C,MAAM2C,QAAS,SAC1DG,KAAK,KANT,iB,GApEazB,a,OCmJlB2B,E,kDA1Ib,aAAe,IAAD,8BACZ,gBACK7D,MAAQ,CACX8D,eAAgB,GAChBzC,aAAa,EACbmC,QAAS,UACTE,SAAU,MACVK,UAAW,GACXC,UAAW,GAGb,EAAKvB,kBAAoB,EAAKA,kBAAkBlC,KAAvB,gBACzB,EAAKS,WAAa,EAAKA,WAAWT,KAAhB,gBAClB,EAAKO,eAAiB,EAAKA,eAAeP,KAApB,gBACtB,EAAKkD,YAAc,EAAKA,YAAYlD,KAAjB,gBACnB,EAAK6C,WAAa,EAAKA,WAAW7C,KAAhB,gBAClB,EAAKsC,WAAa,EAAKA,WAAWtC,KAAhB,gBAhBN,E,uDAmBHY,EAAMD,EAAOK,GACtB,IAAI0C,EAAWrD,KAAKZ,MAAM8D,eAK1BG,EAJeC,oBAAUtD,KAAKZ,MAAM8D,eAAgB,CAClDtB,MAAOjB,KAGUJ,GAAQD,EAC3BN,KAAKG,SAAS,CACZ+C,eAAgBG,M,iCAITE,GACTvD,KAAKG,SAAS,CAACgD,UAAWI,M,kCAGhBC,EAAOC,GACjBzD,KAAKG,SAAS,CACZyC,QAASY,EACTV,SAAUW,M,mCAKZzD,KAAKG,SAAS,CACZM,aAAcT,KAAKZ,MAAMqB,gB,qCAIdiD,GACb,IAAIL,EAAWrD,KAAKZ,MAAM8D,eAC1BQ,EAAI9B,MAAQ5B,KAAKZ,MAAMgE,UACvBC,EAASM,QAAQD,GACjB1D,KAAKG,SAAS,CACZ+C,eAAgBG,EAChBD,UAAWpD,KAAKZ,MAAMgE,UAAY,M,wCAIpBM,GAChB,IAAIL,EAAWrD,KAAKZ,MAAM8D,eAC1BG,EAAWO,kBAAQP,EAAUK,GAE7B1D,KAAKG,SAAS,CAAC+C,eAAgBG,M,0CAGZ,IAAD,OAClBQ,MAAM,eACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAOD,EAAOxC,KAAI,SAAAC,GAGtB,OAFAA,EAAKE,MAAQ,EAAKxC,MAAMgE,UACxB,EAAKjD,SAAS,CAACiD,UAAW,EAAKhE,MAAMgE,UAAY,IAC1C1B,KAGT,EAAKvB,SAAS,CACZ+C,eAAgBgB,S,+BAKZ,IAEJV,EAFG,OAGHW,EAAenE,KAAKZ,MAAM8D,eAuB9B,OArBEM,EADyB,QAAxBxD,KAAKZ,MAAM0D,SACJ,GAEC,EAGXqB,EAAeA,EAAaC,MAAK,SAACC,EAAEC,GAClC,OAAID,EAAE,EAAKjF,MAAMwD,SAAS2B,cACtBD,EAAE,EAAKlF,MAAMwD,SAAS2B,eAEd,EAAIf,EAEL,EAAIA,KAEdgB,QAAO,SAAAC,GACR,OACEA,EAAQ,QAAYF,cAAcG,SAAS,EAAKtF,MAAM+D,UAAUoB,gBAChEE,EAAQ,UAAcF,cAAcG,SAAS,EAAKtF,MAAM+D,UAAUoB,gBAClEE,EAAQ,SAAaF,cAAcG,SAAS,EAAKtF,MAAM+D,UAAUoB,kBAKnE,0BAAM/D,UAAU,gBAAgBG,GAAG,cACjC,yBAAKH,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CACEC,YAAaT,KAAKZ,MAAMqB,YACxBL,WAAYJ,KAAKI,WACjBF,eAAkBF,KAAKE,iBAEzB,kBAAC,EAAD,CACE0C,QAAW5C,KAAKZ,MAAMwD,QACtBE,SAAY9C,KAAKZ,MAAM0D,SACvBD,YAAe7C,KAAK6C,YACpBL,WAAcxC,KAAKwC,aAErB,kBAAC,EAAD,CACEhB,aAAc2C,EACdtC,kBAAmB7B,KAAK6B,kBACxBI,WAAcjC,KAAKiC,sB,GAjInBX,aCGEqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6cc897fc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass AddAppointments extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            petName: '',\r\n            ownerName: '',\r\n            aptDate: '',\r\n            aptTime: '',\r\n            aptNotes: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n\r\n    handleAdd(e) {\r\n        e.preventDefault();\r\n        let tempApt = {\r\n            petName: this.state.petName,\r\n            ownerName: this.state.ownerName,\r\n            aptDate: this.state.aptDate + ' ' + this.state.aptTime,\r\n            aptNotes: this.state.aptNotes,\r\n        };\r\n\r\n        this.props.addAppointment(tempApt);\r\n\r\n        this.setState({\r\n            petName: '',\r\n            ownerName: '',\r\n            aptDate: '',\r\n            aptTime: '',\r\n            aptNotes: ''\r\n        });\r\n        this.props.toggleForm();\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState ({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\r\n                'card textcenter mt-3 ' + \r\n                (this.props.formDisplay ? '':'add-appointment')\r\n            }>\r\n                <div \r\n                    className=\"apt-addheading card-header bg-primary text-white\" \r\n                    onClick={this.props.toggleForm}\r\n                >\r\n                 <FaPlus/> Add Appointment\r\n                </div>\r\n    \r\n                <div className=\"card-body\">\r\n                <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n                    <div className=\"form-group form-row\">\r\n                    <label\r\n                        className=\"col-md-2 col-form-label text-md-right\"\r\n                        htmlFor=\"petName\"\r\n                        readOnly\r\n                    >\r\n                        Pet Name\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"petName\"\r\n                        placeholder=\"Pet's Name\"\r\n                        value = {this.state.petName}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row\">\r\n                    <label\r\n                        className=\"col-md-2 col-form-label text-md-right\"\r\n                        htmlFor=\"ownerName\"\r\n                    >\r\n                        Pet Owner\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"ownerName\"\r\n                        placeholder=\"Owner's Name\"\r\n                        value = {this.state.petOwner}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row\">\r\n                    <label\r\n                        className=\"col-md-2 col-form-label text-md-right\"\r\n                        htmlFor=\"aptDate\"\r\n                    >\r\n                        Date\r\n                    </label>\r\n                    <div className=\"col-md-4\">\r\n                        <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        name=\"aptDate\"\r\n                        id=\"aptDate\"\r\n                        value = {this.state.aptDate}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <label\r\n                        className=\"col-md-2 col-form-label text-md-right\"\r\n                        htmlFor=\"aptTime\"\r\n                    >\r\n                        Time\r\n                    </label>\r\n                    <div className=\"col-md-4\">\r\n                        <input\r\n                        type=\"time\"\r\n                        className=\"form-control\"\r\n                        name=\"aptTime\"\r\n                        id=\"aptTime\"\r\n                        value = {this.state.aptTime}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row\">\r\n                    <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n                        Apt. Notes\r\n                    </label>\r\n                    <div className=\"col-md-10\">\r\n                        <textarea\r\n                        className=\"form-control\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        name=\"aptNotes\"\r\n                        id=\"aptNotes\"\r\n                        placeholder=\"Appointment Notes\"\r\n                        value = {this.state.aptNotes}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row mb-0\">\r\n                    <div className=\"offset-md-2 col-md-10\">\r\n                        <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary d-block ml-auto\"\r\n                        >\r\n                        Add Appointment\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddAppointments;","import React, {Component} from 'react';\r\nimport {FaTimes} from 'react-icons/fa';\r\nimport Moment from 'react-moment';\r\n\r\nclass ListAppointments extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"appointment-list item-list mb-3\">\r\n                {this.props.appointments.map(item => (\r\n                    <div className=\"pet-item col media py-3\" key={item.aptId}>\r\n                        <div className=\"mr-3\">\r\n                            <button className=\"pet-delete btn btn-sm btn-danger\" onClick={()=> this.props.deleteAppointment(item)}><FaTimes/></button>\r\n                        </div>\r\n            \r\n                        <div className=\"pet-info media-body\">\r\n                            <div className=\"pet-head d-flex\">\r\n                            <span className=\"pet-name\" \r\n                                contentEditable \r\n                                suppressContentEditableWarning\r\n                                onBlur = {\r\n                                    e => this.props.updateInfo('petName', e.target.innerText, item.aptId)\r\n                                }\r\n                            >\r\n                                {item.petName}\r\n                            </span>\r\n                            <span className=\"apt-date ml-auto\"><Moment date={item.aptDate} parse=\"YYYY-MM-dd hh:mm\" format=\"MMM-D h:mma\"/></span>\r\n                            </div>\r\n            \r\n                            <div className=\"owner-name\">\r\n                            <span className=\"label-item\">\r\n                                Owner: \r\n                            </span>\r\n                            <span\r\n                                contentEditable \r\n                                suppressContentEditableWarning\r\n                                onBlur = {\r\n                                    e => this.props.updateInfo('ownerName', e.target.innerText, item.aptId)\r\n                                }\r\n                            >\r\n                                {item.ownerName}\r\n                            </span>\r\n                            </div>\r\n                            <div className=\"apt-notes\"\r\n                                contentEditable \r\n                                suppressContentEditableWarning\r\n                                onBlur = {\r\n                                    e => this.props.updateInfo('aptNotes', e.target.innerText, item.aptId)\r\n                                }\r\n                            >\r\n                                {item.aptNotes}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListAppointments;","import React, {Component} from 'react';\r\n\r\nclass SearchAppointments extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"search-appointments row justify-content-center my-4\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  id=\"SearchApts\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Search Appointments\"\r\n                  onChange={e => this.props.searchApts(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary dropdown-toggle\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Sort by: <span className=\"caret\" />\r\n                  </button>\r\n    \r\n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={\r\n                            'sort-by dropdown-item ' +\r\n                            (this.props.orderBy === 'petName' ? 'active':'')\r\n                        }\r\n                        onClick={ e => this.props.changeOrder('petName', this.props.orderDir)}\r\n                        href=\"#\"\r\n                    >\r\n                      Pet Name\r\n                    </button>\r\n\r\n                    <button \r\n                        className={\r\n                            'sort-by dropdown-item ' +\r\n                            (this.props.orderBy === 'aptDate' ? 'active':'')\r\n                        } \r\n                        onClick={ e => this.props.changeOrder('aptDate', this.props.orderDir)}\r\n                        href=\"#\"\r\n                    >\r\n                      Date\r\n                    </button>\r\n\r\n                    <button \r\n                        className={\r\n                            'sort-by dropdown-item ' +\r\n                            (this.props.orderBy === 'ownerName' ? 'active':'')\r\n                        }\r\n                        onClick={ e => this.props.changeOrder('ownerName', this.props.orderDir)}\r\n                        href=\"#\"\r\n                    >\r\n                      Owner\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button \r\n                        className={\r\n                            'sort-by dropdown-item ' +\r\n                            (this.props.orderDir === 'asc' ? 'active':'')\r\n                        }\r\n                        onClick={ e => this.props.changeOrder(this.props.orderBy, 'asc')}\r\n                        href=\"#\"\r\n                    >\r\n                      Asc\r\n                    </button>\r\n                    <button \r\n                        className={\r\n                            'sort-by dropdown-item ' +\r\n                            (this.props.orderDir === 'desc' ? 'active':'')\r\n                        } \r\n                        onClick={ e => this.props.changeOrder(this.props.orderBy, 'desc')}\r\n                        href=\"#\"\r\n                    >\r\n                      Desc\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchAppointments;","import React, {Component} from 'react';\nimport '../css/App.css';\n\nimport AddAppointments from './AddAppointments';\nimport ListAppointments from './ListAppointments';\nimport SearchAppointments from './SearchAppointments';\n\nimport {findIndex, without} from 'lodash'\n\nclass App extends Component{\n\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy: 'petName',\n      orderDir: 'asc',\n      queryText: '',\n      lastIndex: 0,\n    };\n\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  updateInfo(name, value, id) {\n    let tempApts = this.state.myAppointments;\n    let aptIndex = findIndex(this.state.myAppointments, {\n      aptId: id\n    });\n\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  searchApts(query) {\n    this.setState({queryText: query});\n  }\n\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    });\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    });\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({myAppointments: tempApts});\n  }\n\n  componentDidMount() {\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(result => {\n      const apts = result.map(item => {\n        item.aptId = this.state.lastIndex;\n        this.setState({lastIndex: this.state.lastIndex + 1});\n        return item;\n      });\n\n      this.setState({\n        myAppointments: apts\n      });\n    })\n  }\n\n  render() {\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDir === 'asc') {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if (a[this.state.orderBy].toLowerCase() < \n          b[this.state.orderBy].toLowerCase()\n        ) {\n          return -1 * order;\n        } else {\n          return 1 * order;\n        }\n    }).filter(eachItem => {\n      return (\n        eachItem['petName'].toLowerCase().includes(this.state.queryText.toLowerCase()) || \n        eachItem['ownerName'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n        eachItem['aptNotes'].toLowerCase().includes(this.state.queryText.toLowerCase())\n      )\n    });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments \n                  formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addAppointment = {this.addAppointment}\n                />\n                <SearchAppointments\n                  orderBy = {this.state.orderBy}\n                  orderDir = {this.state.orderDir}\n                  changeOrder = {this.changeOrder}\n                  searchApts = {this.searchApts}\n                />\n                <ListAppointments \n                  appointments={filteredApts} \n                  deleteAppointment={this.deleteAppointment}\n                  updateInfo = {this.updateInfo}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery';\nimport 'popper.js/dist/umd/popper';\nimport 'bootstrap/dist/js/bootstrap';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}